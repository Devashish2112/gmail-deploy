{"version":3,"file":"static/js/995.77125201.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Delete.js","components/ViewEmail.jsx","constants/constant.js","services/api.js","hooks/useApi.jsx","services/api.urls.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\r\nimport { ArrowBack, Delete } from \"@mui/icons-material\";\r\nimport { Box, Typography, styled } from \"@mui/material\";\r\nimport { useOutletContext, useLocation } from \"react-router-dom\";\r\nimport { emptyProfilePic } from \"../constants/constant\";\r\nimport useApi from \"../hooks/useApi\";\r\nimport { API_URLS } from \"../services/api.urls\";\r\n\r\nconst IconWrapper = styled(Box)({\r\n    padding: 15\r\n});\r\n\r\nconst Subject = styled(Typography)({\r\n    fontSize: 22,\r\n    margin: '10px 0 20px 75px',\r\n    display: 'flex'\r\n});\r\n\r\nconst Indicator = styled(Box)`\r\n    font-size: 12px !important;\r\n    background: #ddd;\r\n    color: #222;\r\n    border-radius: 4px;\r\n    margin-left: 6px;\r\n    padding: 2px 4px;\r\n    align-self: center;\r\n`;\r\n\r\nconst Container = styled(Box)({\r\n    marginLeft: 15,\r\n    width: '100%',\r\n    '& > div': {\r\n        display: 'flex',\r\n        '& > p > span': {\r\n            fontSize: 12,\r\n            color: '#5E5E5E'\r\n        }\r\n    }\r\n});\r\n\r\nconst Image = styled('img')({\r\n    borderRadius: '50%',\r\n    width: 40,\r\n    height: 40,\r\n    margin: '5px 10px 0 10px',\r\n    backgroundColor: '#cccccc'\r\n});\r\n\r\nconst Date = styled(Typography)({\r\n    margin: '0 50px 0 auto',\r\n    fontSize: 12,\r\n    color: '#5E5E5E'\r\n})\r\n\r\nconst ViewEmail = () => {\r\n\r\n    const { openDrawer } = useOutletContext();\r\n\r\n    const { state } = useLocation();\r\n    const { email } = state;\r\n\r\n    const moveEmailsToBinService = useApi(API_URLS.moveEmailsToBin);\r\n\r\n    const deleteEmail = () => {\r\n        moveEmailsToBinService.call([email._id]);\r\n        window.history.back();\r\n    }\r\n\r\n    return (\r\n        <Box style={ openDrawer ? {marginLeft: 250} : {width: '100%'}}>\r\n            <IconWrapper>\r\n                <ArrowBack onClick={() => window.history.back()} color=\"action\" fontSize=\"small\"/>\r\n                <Delete fontSize='small' color=\"action\" style={{ marginLeft: 40 }} onClick={() => deleteEmail()}/>\r\n            </IconWrapper>\r\n            <Subject>\r\n                {email.subject} <Indicator component=\"span\">Inbox</Indicator>\r\n            </Subject>\r\n            <Box style={{display: 'flex'}}>\r\n                <Image src={emptyProfilePic} alt=\"dp\" />\r\n                <Container>\r\n                    <Box>\r\n                        <Typography>\r\n                            {email.name}\r\n                            <Box component=\"span\">&nbsp;&#60;{email.to}&#62;</Box>\r\n                        </Typography>\r\n                        <Date>\r\n                            {(new window.Date(email.date)).getDate()}&nbsp;\r\n                            {(new window.Date(email.date)).toLocaleString('default', { month: 'long' })}&nbsp;\r\n                            {(new window.Date(email.date)).getFullYear()}\r\n                        </Date>\r\n                    </Box>\r\n                    <Typography style={{ marginTop: 20 }}>{email.body}</Typography>\r\n                </Container>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ViewEmail;","export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png';\r\n\r\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png';\r\n\r\nexport const EMPTY_TABS = {\r\n    inbox: {\r\n        heading: 'Your inbox is empty',\r\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\r\n    },\r\n    drafts: {\r\n        heading: \"You don't have any saved drafts.\",\r\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\r\n    },\r\n    starred: {\r\n        heading: 'No starred messages',\r\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\r\n    },\r\n    sent: {\r\n        heading: 'No sent messages!',\r\n        subHeading: 'Send one now!'\r\n    },\r\n    bin: {\r\n        heading: 'No conversations in Bin.',\r\n        subHeading: ''\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst API_URL = '';\r\n\r\nconst API_GMAIL = async (urlObject, payload, type) => {\r\n    return axios({\r\n        method: urlObject.method,\r\n        url:`${API_URL}/${urlObject.endpoint}/${type}`,\r\n        data: payload\r\n    })\r\n}\r\n\r\nexport default API_GMAIL;","import API from '../services/api';\r\nimport { useState } from 'react';\r\n\r\nconst useApi = (urlObject) => {\r\n    \r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const call = async (payload, type = '') => {\r\n        setResponse(null);\r\n        setError(\"\");\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let res = await API(urlObject, payload, type);\r\n            setResponse(res.data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return { call, response, error, isLoading };\r\n}\r\n\r\nexport default useApi;","export const API_URLS = {\r\n    saveSentEmail: {\r\n        endpoint: 'save',\r\n        method: 'POST'\r\n    },\r\n    getEmailFromType: {\r\n        endpoint: 'emails',\r\n        method: 'GET'\r\n    },\r\n    saveDraftEmails: {\r\n        endpoint: 'save-draft',\r\n        method: 'POST'\r\n    },\r\n    moveEmailsToBin: {\r\n        endpoint: 'bin',\r\n        method: 'POST',\r\n    },\r\n    toggleStarredMails: {\r\n        endpoint: 'starred',\r\n        method: 'POST'\r\n    }, \r\n    deleteEmails: {\r\n        endpoint: 'delete',\r\n        method: 'DELETE'\r\n    }\r\n}"],"names":["createSvgIcon","_jsx","d","IconWrapper","styled","Box","padding","Subject","Typography","fontSize","margin","display","Indicator","Container","marginLeft","width","color","Image","borderRadius","height","backgroundColor","Date","ViewEmail","openDrawer","useOutletContext","state","useLocation","email","moveEmailsToBinService","useApi","API_URLS","moveEmailsToBin","_jsxs","style","children","ArrowBack","onClick","window","history","back","Delete","call","_id","subject","component","src","emptyProfilePic","alt","name","to","date","getDate","toLocaleString","month","getFullYear","marginTop","body","gmailLogo","EMPTY_TABS","inbox","heading","subHeading","drafts","starred","sent","bin","async","urlObject","payload","type","axios","method","url","endpoint","data","response","setResponse","useState","error","setError","isLoading","setIsLoading","arguments","length","undefined","res","API","message","saveSentEmail","getEmailFromType","saveDraftEmails","toggleStarredMails","deleteEmails"],"sourceRoot":""}