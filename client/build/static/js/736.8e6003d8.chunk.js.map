{"version":3,"file":"static/js/736.8e6003d8.chunk.js","mappings":"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","sources":["constants/constant.js","services/api.js","hooks/useApi.jsx","components/Header.jsx","config/sidebar.config.js","components/ComposeMail.jsx","components/SideBarContent.jsx","components/SideBar.jsx","pages/Main.jsx","services/api.urls.js"],"sourcesContent":["export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png';\r\n\r\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png';\r\n\r\nexport const EMPTY_TABS = {\r\n    inbox: {\r\n        heading: 'Your inbox is empty',\r\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\r\n    },\r\n    drafts: {\r\n        heading: \"You don't have any saved drafts.\",\r\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\r\n    },\r\n    starred: {\r\n        heading: 'No starred messages',\r\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\r\n    },\r\n    sent: {\r\n        heading: 'No sent messages!',\r\n        subHeading: 'Send one now!'\r\n    },\r\n    bin: {\r\n        heading: 'No conversations in Bin.',\r\n        subHeading: ''\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst API_URL = '';\r\n\r\nconst API_GMAIL = async (urlObject, payload, type) => {\r\n    return axios({\r\n        method: urlObject.method,\r\n        url:`${API_URL}/${urlObject.endpoint}/${type}`,\r\n        data: payload\r\n    })\r\n}\r\n\r\nexport default API_GMAIL;","import API from '../services/api';\r\nimport { useState } from 'react';\r\n\r\nconst useApi = (urlObject) => {\r\n    \r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const call = async (payload, type = '') => {\r\n        setResponse(null);\r\n        setError(\"\");\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let res = await API(urlObject, payload, type);\r\n            setResponse(res.data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return { call, response, error, isLoading };\r\n}\r\n\r\nexport default useApi;","import { AppBar, Toolbar, styled, InputBase, Box } from '@mui/material';\r\nimport { Menu as MenuIcon, Search, Tune, HelpOutlineOutlined, SettingsOutlined, AppsOutlined, AccountCircleOutlined } from '@mui/icons-material';\r\nimport { gmailLogo } from '../constants/constant';\r\n\r\nconst SearchWrapper = styled(Box)({\r\n    background: '#EAF1FB',\r\n    marginLeft: '80px',\r\n    borderRadius: 8,\r\n    minWidth: '690px',\r\n    maxWidth: '720px',\r\n    height: 48,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '0 20px',\r\n    '& > div': {\r\n        width: '100%',\r\n        padding: '0 10px'\r\n    }\r\n});\r\n\r\nconst OptionsWrapper = styled(Box)`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: end;\r\n    & > svg {\r\n        margin-left: 20px;\r\n    }\r\n`\r\n\r\nconst StyledAppBar = styled(AppBar) ({\r\n    background: '#F5F5F5',\r\n    boxShadow: 'none'\r\n})\r\n\r\nconst Header = ({toggleDrawer}) => {\r\n    return(\r\n        <StyledAppBar position='static'>\r\n            <Toolbar>\r\n                <MenuIcon color='action' onClick={toggleDrawer} />\r\n                <img src={gmailLogo} alt='logo' style={{width: 110, marginLeft: 15}} />\r\n                <SearchWrapper>\r\n                    <Search color='action'/>\r\n                    <InputBase \r\n                        placeholder='Search mail'\r\n                    />\r\n                    <Tune color='action'/>\r\n                </SearchWrapper>\r\n                <OptionsWrapper>\r\n                    <HelpOutlineOutlined color='action'/>\r\n                    <SettingsOutlined color='action'/>\r\n                    <AppsOutlined color='action'/>\r\n                    <AccountCircleOutlined color='action'/>\r\n                </OptionsWrapper>\r\n            </Toolbar>\r\n        </StyledAppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\n\r\nimport { Photo, StarOutline, SendOutlined, InsertDriveFileOutlined, DeleteOutlined,\r\n    MailOutlined } from '@mui/icons-material';\r\n\r\nexport const SIDEBAR_DATA = [\r\n    {\r\n        name: 'inbox',\r\n        title: 'Inbox',\r\n        icon: Photo,\r\n    },\r\n    {\r\n        name: 'starred',\r\n        title: 'Starred',\r\n        icon: StarOutline,\r\n    },\r\n    {\r\n        name: 'sent',\r\n        title: 'Sent',\r\n        icon: SendOutlined,\r\n    },\r\n    {\r\n        name: 'drafts',\r\n        title: 'Drafts',\r\n        icon: InsertDriveFileOutlined,\r\n    },\r\n    {\r\n        name: 'bin',\r\n        title: 'Bin',\r\n        icon: DeleteOutlined,\r\n    },\r\n    {\r\n        name: 'allmail',\r\n        title: 'All Mail',\r\n        icon: MailOutlined,\r\n    }\r\n];","import { useState } from 'react';\r\nimport { Dialog, Box, Typography, styled, InputBase, TextField, Button } from '@mui/material'\r\nimport { Close, DeleteOutlined } from '@mui/icons-material'\r\nimport useApi from '../hooks/useApi';\r\nimport { API_URLS } from '../services/api.urls';\r\n\r\n\r\nconst dialogStyle = {\r\n    height: '90%',\r\n    width: '80%',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n    boxShadow: 'none',\r\n    borderRadius: '10px 10px 0 0'\r\n}\r\n\r\nconst RecipientWrapper = styled(Box)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 15px;\r\n    & > div {\r\n        font-size: 14px;\r\n        border-bottom: 1px solid #F5F5F5;\r\n        margin-top: 10px;\r\n    }\r\n`;\r\n\r\nconst Header = styled(Box)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 15px;\r\n    background: #f2f6fc;\r\n    & > p {\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n    }\r\n`;\r\n\r\nconst Footer = styled(Box)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 15px;\r\n    align-items: center;\r\n`;\r\n\r\nconst SendButton = styled(Button)`\r\n    background: #0B57D0;\r\n    color: #fff;\r\n    font-weight: 500;\r\n    text-transform: none;\r\n    border-radius: 18px;\r\n    width: 100px;\r\n`\r\n\r\nconst ComposeMail = ({ openDialog, setOpenDialog }) => {\r\n    const [data, setData]  =useState({});\r\n    const sentEmailService = useApi(API_URLS.saveSentEmail);\r\n    const saveDraftService = useApi(API_URLS.saveDraftEmails);\r\n\r\n    const config = {\r\n            Host : \"smtp.elasticemail.com\",\r\n            Username : process.env.REACT_APP_USERNAME,\r\n            Password : process.env.REACT_APP_PASSWORD,\r\n            Port: 2525,\r\n    }\r\n\r\n    const closeComposeMail = (e) => {\r\n        e.preventDefault();\r\n\r\n        const payload = {\r\n            to: data.to,\r\n            from: 'devashishramola@gmail.com',\r\n            subject: data.subject,\r\n            body: data.body,\r\n            date: new Date(),\r\n            image: '',\r\n            name: 'DJ GOVIND',\r\n            starred: false,\r\n            type: 'drafts'\r\n        }\r\n\r\n        saveDraftService.call(payload);\r\n\r\n        if(!saveDraftService.error) {\r\n            setOpenDialog(false);\r\n            setData({});\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    const sendMail = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (window.Email) {\r\n            window.Email.send({\r\n                ...config,\r\n                To : data.to,\r\n                From : \"devashishramola@gmail.com\",\r\n                Subject : data.subject,\r\n                Body : data.body\r\n            }).then(\r\n            message => alert(message)\r\n            );\r\n        }\r\n\r\n        const payload = {\r\n            to: data.to,\r\n            from: 'devashishramola@gmail.com',\r\n            subject: data.subject,\r\n            body: data.body,\r\n            date: new Date(),\r\n            image: '',\r\n            name: 'DJ GOVIND',\r\n            starred: false,\r\n            type: 'sent'\r\n        }\r\n\r\n        sentEmailService.call(payload);\r\n\r\n        if(!sentEmailService.error) {\r\n            setOpenDialog(false);\r\n            setData({});\r\n        } else {\r\n\r\n        }\r\n\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const onValueChange = (e) => {\r\n        \r\n        setData({ ...data, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={openDialog}\r\n            PaperProps={{sx: dialogStyle }}\r\n        >\r\n            <Header>\r\n                <Typography>New Message</Typography>\r\n                <Close fontSize=\"small\" onClick={(e) => closeComposeMail(e)} />\r\n            </Header>\r\n            <RecipientWrapper>\r\n                <InputBase placeholder=\"Recipients\" name=\"to\" onChange={(e) => onValueChange(e)}/>\r\n                <InputBase placeholder=\"Subject\" name=\"subject\" onChange={(e) => onValueChange(e)}/>\r\n            </RecipientWrapper>\r\n            <TextField \r\n                multiline\r\n                rows={18}\r\n                sx={{ '& .MuiOutlinedInput-notchedOutline':  { border: 'none' }}}\r\n                onChange={(e) => onValueChange(e)}\r\n                name=\"body\"\r\n            />\r\n            <Footer>\r\n                <SendButton  onClick={(e) => sendMail(e)}>send</SendButton>\r\n                <DeleteOutlined onClick={(e) => setOpenDialog(false)}/>\r\n            </Footer>\r\n        </Dialog>\r\n    )\r\n        \r\n}\r\n\r\nexport default ComposeMail;","import { CreateOutlined } from \"@mui/icons-material\";\r\nimport { Box, Button, styled, List, ListItem } from \"@mui/material\";\r\nimport { SIDEBAR_DATA } from \"../config/sidebar.config\";\r\nimport ComposeMail from \"./ComposeMail\";\r\nimport { useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { routes } from \"../routes/routes\";\r\n\r\nconst ComposeButton = styled(Button)`\r\n    background: #c2e7ff;\r\n    color: #001d35;\r\n    border-radius: 16px;\r\n    padding: 15px;\r\n    min-width: 140px;\r\n    text-transform: none;\r\n`;\r\n\r\nconst Container = styled(Box)({\r\n    padding: 8,\r\n    '& > ul': {\r\n        padding: '10px 0 0 5px',\r\n        fontSize: 14,\r\n        fontWeight: 500,\r\n        cursor: 'pointer',\r\n        '& > a': {\r\n            textDecoration: 'none',\r\n            color: 'inherit'\r\n        }\r\n    },\r\n    '& > ul > a > li > svg': {\r\n        marginRight: 20\r\n    }\r\n});\r\n\r\nconst SideBarContent = () => {\r\n    \r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const { type } = useParams();\r\n\r\n    const onComposeClick = () => {\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n             <ComposeButton onClick={() => onComposeClick()}>\r\n                <CreateOutlined />Compose\r\n            </ComposeButton>\r\n            <List>\r\n                {\r\n                    SIDEBAR_DATA.map(data => (\r\n                        <NavLink key={data.name} to={`${routes.emails.path}/${data.name}`}>\r\n                            <ListItem style={type === data.name.toLowerCase() ? {\r\n                                backgroundColor: '#d3e3fd',\r\n                                borderRadius: '0 16px 16px 0'\r\n                            } : {}}>\r\n                                <data.icon fontSize=\"small\"/>{data.title}\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    ))\r\n                }  \r\n            </List>\r\n            <ComposeMail openDialog={openDialog} setOpenDialog={setOpenDialog}/>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default SideBarContent;","import { TrendingUp } from \"@mui/icons-material\";\r\nimport { Drawer, styled } from \"@mui/material\";\r\nimport SideBarContent from \"./SideBarContent\";\r\n\r\n    const SideBar = ({openDrawer}) => {\r\n        \r\n    return(\r\n        <Drawer\r\n            anchor='left'\r\n            open={openDrawer}\r\n            hideBackdrop={true}\r\n            ModalProps={{\r\n                keepMounted: true,\r\n            }}\r\n            variant=\"persistent\"\r\n            sx={{\r\n                '& .MuiDrawer-paper': { \r\n                    width: 250,\r\n                    borderRight: 'none',\r\n                    background: '#f5F5F5',\r\n                    marginTop: '64px',\r\n                    height: 'calc(100vh - 64px)'\r\n                },\r\n            }}\r\n          >\r\n            <SideBarContent />\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import { Suspense, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport SuspenseLoader from \"../components/common/SuspenseLoader\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst Main = () => {\r\n    const [openDrawer, setOpenDrawer] = useState(true);\r\n\r\n    const toggleDrawer = () => {\r\n        setOpenDrawer(prevState => !prevState);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Header toggleDrawer={toggleDrawer}/>\r\n            <Box>\r\n                <SideBar openDrawer={openDrawer}/>\r\n                <Suspense fallback={<SuspenseLoader />}>\r\n                <Outlet context={{ openDrawer }}/>\r\n                </Suspense>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;","export const API_URLS = {\r\n    saveSentEmail: {\r\n        endpoint: 'save',\r\n        method: 'POST'\r\n    },\r\n    getEmailFromType: {\r\n        endpoint: 'emails',\r\n        method: 'GET'\r\n    },\r\n    saveDraftEmails: {\r\n        endpoint: 'save-draft',\r\n        method: 'POST'\r\n    },\r\n    moveEmailsToBin: {\r\n        endpoint: 'bin',\r\n        method: 'POST',\r\n    },\r\n    toggleStarredMails: {\r\n        endpoint: 'starred',\r\n        method: 'POST'\r\n    }, \r\n    deleteEmails: {\r\n        endpoint: 'delete',\r\n        method: 'DELETE'\r\n    }\r\n}"],"names":["gmailLogo","emptyProfilePic","EMPTY_TABS","inbox","heading","subHeading","drafts","starred","sent","bin","async","urlObject","payload","type","axios","method","url","endpoint","data","response","setResponse","useState","error","setError","isLoading","setIsLoading","call","arguments","length","undefined","res","API","message","SearchWrapper","styled","Box","background","marginLeft","borderRadius","minWidth","maxWidth","height","display","justifyContent","alignItems","padding","width","OptionsWrapper","StyledAppBar","AppBar","boxShadow","_ref","toggleDrawer","_jsx","position","children","_jsxs","Toolbar","MenuIcon","color","onClick","src","alt","style","Search","InputBase","placeholder","Tune","HelpOutlineOutlined","SettingsOutlined","AppsOutlined","AccountCircleOutlined","SIDEBAR_DATA","name","title","icon","Photo","StarOutline","SendOutlined","InsertDriveFileOutlined","DeleteOutlined","MailOutlined","dialogStyle","maxHeight","RecipientWrapper","Header","Footer","SendButton","Button","openDialog","setOpenDialog","setData","sentEmailService","useApi","API_URLS","saveSentEmail","saveDraftService","saveDraftEmails","config","Host","Username","process","Password","Port","onValueChange","e","target","value","Dialog","open","PaperProps","sx","Typography","Close","fontSize","preventDefault","to","from","subject","body","date","Date","image","closeComposeMail","onChange","TextField","multiline","rows","border","window","Email","send","To","From","Subject","Body","then","alert","sendMail","ComposeButton","Container","fontWeight","cursor","textDecoration","marginRight","SideBarContent","useParams","CreateOutlined","List","map","NavLink","routes","emails","path","ListItem","toLowerCase","backgroundColor","ComposeMail","openDrawer","Drawer","anchor","hideBackdrop","ModalProps","keepMounted","variant","borderRight","marginTop","Main","setOpenDrawer","_Fragment","prevState","SideBar","Suspense","fallback","SuspenseLoader","Outlet","context","getEmailFromType","moveEmailsToBin","toggleStarredMails","deleteEmails"],"sourceRoot":""}